How did viewing a diff between two versions of a file help you see the bug that
was introduced?

	This narrowed down the possiblities to a manageable number for a human to look through

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    When I make a mistake or break something, I can get back to a workable state.  Diff can help find the error so I don't make it again.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    I can determine better logical milestones, such as when it will compile without errors or works well, or before I start a major refactoring.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Code more often has files depending on each other and having a complete set as-they-were is important.

How can you use the commands git log and git diff to view the history of files?

    Fill in your answer here

How might using version control make you more confident to make changes that
could break something?

    I will always know I can get back to a functional state without having to try to remember each change to be able to back it out again.  I don't have to comment big chunks, then make an error uncommenting them again.

Now that you have your workspace set up, what do you want to try using Git for?

    Notes about music, lists of IP and MAC addresses of my devices, writing compositions