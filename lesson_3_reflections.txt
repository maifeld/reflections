When would you want to use a remote repository rather than keeping all your work
local?

    Any time I would want to collaborate with another person, use a different computer for development, or keep a backup offsite.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    If I'm working on a concept on top of a code foundation, I don't want the foundation moving underneath my work, such as an API changing.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    A fork is like a major branch, but from another user.
	A clone is a duplicate of a project I'm working on myself.
	A branch is a divergence from another lineage to work on a feature before merging back to the main codebase.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    If you are offline, you can see what you've changed since pulling with a git diff.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

	I would have to email text files around or share a drive somewhere.  We'd have to manually keep track of who changed what and when, then spend a lot of time reconciling differences.  Nothing would be easier.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

	Branches are a good place for risky or experimental expansions of code.  Keeping these on a branch makes the master always safe and stable.
	
